# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      working-directory: ./demo
    # - name: Compile with Maven
    #   run: mvn -B compile
    #   working-directory: ./demo
    # Run Test
    # - name: Test with Maven
    #   run: mvn --batch-mode test
    #   working-directory: ./demo
    - name: List Jar file
      run: |
        jar tvf ${{ github.workspace }}/demo/target/demo-1.0-SNAPSHOT.jar
    - name: Store JAR as artifact
      uses: actions/upload-artifact@v3
      with:
          name: target-jar
          path: ${{ github.workspace }}/demo/target/*.jar
    # - name: Install GitHub CLI
    #   run: |
    #       sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
    #       sudo apt-add-repository https://cli.github.com/packages
    #       sudo apt update
    #       sudo apt install gh -y
    # - name: Authenticate with GitHub CLI
    #   env:
    #     GH_TOKEN: ${{ github.token }}
    #   run: |
    #     echo $GH_TOKEN | gh auth login --with-token

    - name: Pull Request (Test...)
      env:
          GH_TOKEN: ${{ github.token }}
      run: |
          # Make sure git is configured
          git config --global user.name 'bintian8'
          git config --global user.email 'bintian.yanyan8@icloud.com'

          # Create a new branch
          BRANCH_NAME="add-jar-file-$(date +%Y%m%d%H%M%S)"
          git checkout -b $BRANCH_NAME

          # Add the JAR file to the repository
          mkdir -p demo/jar
          cp ${{ github.workspace }}/demo/target/*.jar demo/jar/
          git add demo/jar/*.jar

          # Commit the JAR file
          git commit -m "Add built JAR file"

          # Push the new branch
          git push origin $BRANCH_NAME

          # Create a pull request
          PR_URL=$(gh pr create --title "From Actions" --body "This PR adds the built JAR file to the main." --head $BRANCH_NAME --base main)
          echo "Pull request created: $PR_URL"
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
